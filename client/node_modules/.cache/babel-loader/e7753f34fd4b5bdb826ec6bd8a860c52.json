{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/link_up/client/src/components/ChatDisplay.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport Chat from \"./Chat\";\nimport ChatInput from \"./ChatInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChatDisplay = _ref => {\n  _s();\n\n  let {\n    user,\n    clickedUser\n  } = _ref;\n  const userId = user === null || user === void 0 ? void 0 : user.user_id;\n  const clickedUserId = clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.user_id;\n  const [userMessages, setUsersMessages] = useState(null);\n\n  const getUsersMessages = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/messages', {\n        params: {\n          userId: userId,\n          correspondingUserId: clickedUserId\n        }\n      });\n      setUsersMessages(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChatDisplay, \"Yy+vVswe0ySC3gIJgdOFmI8SAf8=\");\n\n_c = ChatDisplay;\nexport default ChatDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatDisplay\");","map":{"version":3,"names":["axios","Chat","ChatInput","ChatDisplay","user","clickedUser","userId","user_id","clickedUserId","userMessages","setUsersMessages","useState","getUsersMessages","response","get","params","correspondingUserId","data","error","console","log"],"sources":["/Users/apple/Desktop/link_up/client/src/components/ChatDisplay.js"],"sourcesContent":["import axios from \"axios\";\nimport Chat from \"./Chat\";\nimport ChatInput from \"./ChatInput\";\n\nconst ChatDisplay = ({ user, clickedUser }) => {\n    const userId = user?.user_id;\n    const clickedUserId = clickedUser?.user_id;\n    const [userMessages, setUsersMessages] = useState(null);\n\n    const getUsersMessages = async () => {\n        try {\n            const response = await axios.get('http://localhost:8000/messages', {\n                params: { userId: userId, correspondingUserId: clickedUserId }\n            })\n            setUsersMessages(response.data);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    \n    return (\n        <>\n            <Chat />\n            <ChatInput />\n        </>\n    )\n}\n\nexport default ChatDisplay"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;;AAEA,MAAMC,WAAW,GAAG,QAA2B;EAAA;;EAAA,IAA1B;IAAEC,IAAF;IAAQC;EAAR,CAA0B;EAC3C,MAAMC,MAAM,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,OAArB;EACA,MAAMC,aAAa,GAAGH,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEE,OAAnC;EACA,MAAM,CAACE,YAAD,EAAeC,gBAAf,IAAmCC,QAAQ,CAAC,IAAD,CAAjD;;EAEA,MAAMC,gBAAgB,GAAG,YAAY;IACjC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAU,gCAAV,EAA4C;QAC/DC,MAAM,EAAE;UAAET,MAAM,EAAEA,MAAV;UAAkBU,mBAAmB,EAAER;QAAvC;MADuD,CAA5C,CAAvB;MAGAE,gBAAgB,CAACG,QAAQ,CAACI,IAAV,CAAhB;IACH,CALD,CAKE,OAAOC,KAAP,EAAc;MACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACH;EACJ,CATD;;EAWA,oBACI;IAAA,wBACI,QAAC,IAAD;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA,gBADJ;AAMH,CAtBD;;GAAMf,W;;KAAAA,W;AAwBN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}